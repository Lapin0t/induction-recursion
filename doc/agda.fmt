%if False
%
% Permission is granted to include this file (or parts of this file) 
% literally into other documents, regardless of the conditions or 
% license applying to these documents.
%
%endif

%if not lhs2tex_agda_fmt_read
%let lhs2tex_agda_fmt_read = True

%subst verb a       = "\text{\ttfamily " a "}"
%subst verbatim a   = "\begin{tabbing}\ttfamily'n" a "'n\end{tabbing}'n"
%subst verbnl       = "\\'n\ttfamily "

%if style == newcode
%subst comment a        = "-- " a
%subst nested a         = "{- " a " -}"
%subst code a           = a "'n"
%subst newline          = "'n"
%subst dummy            =
%subst pragma a         = "{-# " a " #-}"
%subst tex a            =
%subst numeral a        = a
%subst keyword a        = a
%subst spaces a         = a
%subst special a        = a
%subst space            = " "
%subst conid a          = a
%subst varid a          = a
%subst consym a         = a
%subst varsym a         = a
%subst backquoted a     = "`" a "`"
%subst char a           = "''" a "''"
%subst string a         = "'d" a "'d"

%elif style == poly
%subst comment a        = "\mbox{\onelinecomment " a "}"
%subst nested a         = "\mbox{\commentbegin " a " \commentend}"
%if array
%subst code a           = "\['n\begin{parray}\SaveRestoreHook'n" a "\ColumnHook'n\end{parray}'n\]\resethooks'n"
%else
%subst code a           = "\begingroup\par\noindent\advance\leftskip\mathindent\('n\begin{pboxed}\SaveRestoreHook'n" a "\ColumnHook'n\end{pboxed}'n\)\par\noindent\endgroup\resethooks'n"
%endif
%subst column c a       = "\column{" c "}{" a "}%'n"
%subst fromto b e t     = "\>[" b "]{}" t "{}\<[" e "]%'n"
%subst left             = "@{}>{\hspre}l<{\hspost}@{}"
%subst centered         = "@{}>{\hspre}c<{\hspost}@{}"
%subst dummycol         = "@{}l@{}"
%subst newline          = "\\'n"
%subst blankline        = "\\[\blanklineskip]%'n"
%subst indent n         = "\hsindent{" n "}"

%let autoSpacing        = True
%subst dummy            = "∙"
%subst inline a         = "\ensuremath{" a "}"
%subst hskip a          = "\hskip" a "em\relax"
%subst pragma a         = "\mbox{\enskip\{-\#" a " \#-\}\enskip}"
%subst tex a            = a
%subst numeral a        = "\mathrm{" a "}"
%subst keyword a        = "\KW{" a "}"
%subst spaces a         = a
%subst special a        = a
%subst space            = "\;"
%subst conid a          = "\VAR{" a "}"
%subst varid a          = "\VAR{" a "}"
%subst consym a         = "\mathbin{" a "}"
%subst varsym a         = "\VAR{" a "}"
%subst char a           = "\text{\ttfamily ''" a "''}"
%subst string a         = "\text{\ttfamily \char34 " a "\char34}"
%format ?          = "\brownBG{?}"
%format _          = "\anonymous "
%format →          = "→"
%format ->         = →
%format λ          = "\KW{λ}"
%format \          = λ
%format ∀          = "\KW{∀}"
%format forall     = ∀
%format |          = "\mid "
%format {          = "\{\mskip1.5mu "
%format }          = "\mskip1.5mu\}"
%format [          = "[\mskip1.5mu "
%format ]          = "\mskip1.5mu]"
%format =          = "\mathrel{=}"
%format ..         = "\mathinner{‥}"
%format :          = "\!:\!"
%format ==         = "\mathrel{≡}"
%format inductive  = "\KW{inductive}"
%format coinductive = "\KW{coinductive}"
%format constructor = "\KW{constructor}"
%format pattern    = "\KW{pattern}"
%format rewrite    = "\KW{rewrite}"

%endif  % style == ..

%include agda.sty
%endif  % not lhs2tex_agda_fmt_read
